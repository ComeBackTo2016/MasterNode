; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--list --debug -c --asm --interleave -o..\..\output\init.o --asm_dir=..\..\Listing\ --list_dir=..\..\Listing\ --depend=..\..\output\init.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Libraries\CMSIS -I..\..\User -I..\..\Libraries\FWlib\inc -I..\..\User\Alogrisem\inc -I..\..\User\BSP_Init\inc -I..\..\User\exDev\inc -IH:\CETC\Project\第二代机器鱼程序\AV1.3\Project\RVMDK（uv4）\RTE -ID:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=520 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -W --omf_browse=..\..\output\init.crf ..\..\User\exDev\src\init.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  UART_INIT PROC
;;;6      
;;;7      void UART_INIT(void)				
000000  b510              PUSH     {r4,lr}
;;;8      {
;;;9      	UART1_PA09_PA10_Config();
000002  f7fffffe          BL       UART1_PA09_PA10_Config
;;;10     	UART2_PA02_PA03_Config();
000006  f7fffffe          BL       UART2_PA02_PA03_Config
;;;11     	//UART3_PB10_PB11_Config();
;;;12     }
00000a  bd10              POP      {r4,pc}
;;;13     
                          ENDP

                  IIC2_NVIC_Config PROC
;;;80     //some question
;;;81     static void IIC2_NVIC_Config(unsigned char Pre_EV, unsigned char Pre_ER)
00000c  b538              PUSH     {r3-r5,lr}
;;;82     {
00000e  4605              MOV      r5,r0
000010  460c              MOV      r4,r1
;;;83     	NVIC_InitTypeDef NVIC_InitStructure; 
;;;84     	 	
;;;85     	NVIC_InitStructure.NVIC_IRQChannel = I2C2_EV_IRQn;
000012  2021              MOVS     r0,#0x21
000014  f88d0000          STRB     r0,[sp,#0]
;;;86     	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = Pre_EV;
000018  f88d5001          STRB     r5,[sp,#1]
;;;87     	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
00001c  2001              MOVS     r0,#1
00001e  f88d0003          STRB     r0,[sp,#3]
;;;88     	NVIC_Init(&NVIC_InitStructure);
000022  4668              MOV      r0,sp
000024  f7fffffe          BL       NVIC_Init
;;;89     
;;;90     	NVIC_InitStructure.NVIC_IRQChannel = I2C2_ER_IRQn;
000028  2022              MOVS     r0,#0x22
00002a  f88d0000          STRB     r0,[sp,#0]
;;;91     	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = Pre_ER;
00002e  f88d4001          STRB     r4,[sp,#1]
;;;92     	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
000032  2001              MOVS     r0,#1
000034  f88d0003          STRB     r0,[sp,#3]
;;;93     	NVIC_Init(&NVIC_InitStructure);
000038  4668              MOV      r0,sp
00003a  f7fffffe          BL       NVIC_Init
;;;94     }
00003e  bd38              POP      {r3-r5,pc}
;;;95     
                          ENDP

                  NVIC_of_All PROC
;;;13     
;;;14     void NVIC_of_All(void)
000040  b510              PUSH     {r4,lr}
;;;15     {
;;;16         /* 设置NVIC向量组2,抢占优先级0-3 响应优先级0-3 */
;;;17     	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2); 
000042  f44f60a0          MOV      r0,#0x500
000046  f7fffffe          BL       NVIC_PriorityGroupConfig
;;;18     	/*中断优先级设置需要根据程序里面其它外设进行*/
;;;19     	UART2_NVIC_Config(1, 0);
00004a  2100              MOVS     r1,#0
00004c  2001              MOVS     r0,#1
00004e  f7fffffe          BL       UART2_NVIC_Config
;;;20         IIC2_NVIC_Config(0, 0);
000052  2100              MOVS     r1,#0
000054  4608              MOV      r0,r1
000056  f7fffffe          BL       IIC2_NVIC_Config
;;;21     	Timer4_NVIC_Config(1, 1);	
00005a  2101              MOVS     r1,#1
00005c  4608              MOV      r0,r1
00005e  f7fffffe          BL       Timer4_NVIC_Config
;;;22     }
000062  bd10              POP      {r4,pc}
;;;23     
                          ENDP

                  PWM_INIT PROC
;;;24     void PWM_INIT(void)					
000064  b510              PUSH     {r4,lr}
;;;25     {
;;;26     	/*初始化TIM对应外设为PWM模式并初始化对应引脚及中断配置;T = 2000000/frequency - 1*/
;;;27     	TIM3_PWM_PA6_PA7_PB0_PB1_Config(20000, 72);//enable all ch       output:10K   range:0-100
000066  2148              MOVS     r1,#0x48
000068  f6446020          MOV      r0,#0x4e20
00006c  f7fffffe          BL       TIM3_PWM_PA6_PA7_PB0_PB1_Config
;;;28     //	TIM5_PWM_PA0_PA1_PA2_PA3_Config(100, 72);//enable 1 2 ch
;;;29     	TIM2_PWM_PA0_PA1_PA2_PA3_Config(20000, 72);//enable 1 2 ch  		 output:1K   range:0-1000 liner change
000070  2148              MOVS     r1,#0x48
000072  f6446020          MOV      r0,#0x4e20
000076  f7fffffe          BL       TIM2_PWM_PA0_PA1_PA2_PA3_Config
;;;30     }
00007a  bd10              POP      {r4,pc}
;;;31     
                          ENDP

                  ENCODE_INIT PROC
;;;32     void ENCODE_INIT(void)		
00007c  b510              PUSH     {r4,lr}
;;;33     {
;;;34     	TIM1_EncoderMode_PA8_PA9_Config();
00007e  f7fffffe          BL       TIM1_EncoderMode_PA8_PA9_Config
;;;35     	TIM4_EncoderMode_PD12_PD13_Config();
000082  f7fffffe          BL       TIM4_EncoderMode_PD12_PD13_Config
;;;36     	TIM8_EncoderMode_PC6_PC7_Config();
000086  f7fffffe          BL       TIM8_EncoderMode_PC6_PC7_Config
;;;37     }
00008a  bd10              POP      {r4,pc}
;;;38     
                          ENDP

                  TIMER_INIT PROC
;;;39     void TIMER_INIT(void)				
00008c  b510              PUSH     {r4,lr}
;;;40     {
;;;41     	/*定时时间：72M/72*20000us=20ms*/
;;;42     	Timer4_Config(1000, 72);		//10ms
00008e  2148              MOVS     r1,#0x48
000090  f44f707a          MOV      r0,#0x3e8
000094  f7fffffe          BL       Timer4_Config
;;;43     }
000098  bd10              POP      {r4,pc}
;;;44     
                          ENDP

                  IIC2_Config PROC
;;;45     void IIC2_Config(void)
00009a  b500              PUSH     {lr}
;;;46     {
00009c  b085              SUB      sp,sp,#0x14
;;;47     	I2C_InitTypeDef I2C_InitStructure;
;;;48         GPIO_InitTypeDef GPIO_InitStructure;
;;;49         
;;;50     	// I2C外设复位.
;;;51     	RCC_APB1PeriphResetCmd( RCC_APB1Periph_I2C2, ENABLE);
00009e  2101              MOVS     r1,#1
0000a0  0588              LSLS     r0,r1,#22
0000a2  f7fffffe          BL       RCC_APB1PeriphResetCmd
;;;52         RCC_APB1PeriphResetCmd( RCC_APB1Periph_I2C2, DISABLE);
0000a6  2100              MOVS     r1,#0
0000a8  f44f0080          MOV      r0,#0x400000
0000ac  f7fffffe          BL       RCC_APB1PeriphResetCmd
;;;53         RCC_APB1PeriphClockCmd( RCC_APB1Periph_I2C2, ENABLE);
0000b0  2101              MOVS     r1,#1
0000b2  0588              LSLS     r0,r1,#22
0000b4  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;54         RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB | RCC_APB2Periph_AFIO, ENABLE);
0000b8  2101              MOVS     r1,#1
0000ba  2009              MOVS     r0,#9
0000bc  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;55     
;;;56     	/*配置I2C2设备的引脚为复用开漏输出*/
;;;57     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10 | GPIO_Pin_11;
0000c0  f44f6040          MOV      r0,#0xc00
0000c4  f8ad0000          STRH     r0,[sp,#0]
;;;58     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_OD;    																							 //为复用推挽输出有可能损坏端口！！！
0000c8  201c              MOVS     r0,#0x1c
0000ca  f88d0003          STRB     r0,[sp,#3]
;;;59     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz; 
0000ce  2003              MOVS     r0,#3
0000d0  f88d0002          STRB     r0,[sp,#2]
;;;60     	GPIO_Init(GPIOB, &GPIO_InitStructure); 
0000d4  4669              MOV      r1,sp
0000d6  483d              LDR      r0,|L1.460|
0000d8  f7fffffe          BL       GPIO_Init
;;;61     
;;;62     	// I2C配置.
;;;63     	I2C_DeInit( I2C2 );
0000dc  483c              LDR      r0,|L1.464|
0000de  f7fffffe          BL       I2C_DeInit
;;;64     	// I2C2 configuration ---------------------------------------------
;;;65     	I2C_InitStructure.I2C_Mode = I2C_Mode_I2C;
0000e2  2000              MOVS     r0,#0
0000e4  f8ad0008          STRH     r0,[sp,#8]
;;;66     	I2C_InitStructure.I2C_DutyCycle = I2C_DutyCycle_2;
0000e8  f64b70ff          MOV      r0,#0xbfff
0000ec  f8ad000a          STRH     r0,[sp,#0xa]
;;;67     	I2C_InitStructure.I2C_OwnAddress1 = 0x70;      
0000f0  2070              MOVS     r0,#0x70
0000f2  f8ad000c          STRH     r0,[sp,#0xc]
;;;68     	I2C_InitStructure.I2C_Ack = I2C_Ack_Enable;
0000f6  f44f6080          MOV      r0,#0x400
0000fa  f8ad000e          STRH     r0,[sp,#0xe]
;;;69     	I2C_InitStructure.I2C_AcknowledgedAddress = I2C_AcknowledgedAddress_7bit;
0000fe  0100              LSLS     r0,r0,#4
000100  f8ad0010          STRH     r0,[sp,#0x10]
;;;70     	I2C_InitStructure.I2C_ClockSpeed = 200000;//400000;
000104  4833              LDR      r0,|L1.468|
000106  9001              STR      r0,[sp,#4]
;;;71     
;;;72     	I2C_Cmd(I2C2, ENABLE );
000108  2101              MOVS     r1,#1
00010a  4831              LDR      r0,|L1.464|
00010c  f7fffffe          BL       I2C_Cmd
;;;73     
;;;74     	I2C_Init(I2C2, &I2C_InitStructure);
000110  a901              ADD      r1,sp,#4
000112  482f              LDR      r0,|L1.464|
000114  f7fffffe          BL       I2C_Init
;;;75     	I2C_GeneralCallCmd(I2C2,ENABLE);
000118  2101              MOVS     r1,#1
00011a  482d              LDR      r0,|L1.464|
00011c  f7fffffe          BL       I2C_GeneralCallCmd
;;;76     
;;;77     	I2C_ITConfig( I2C2, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR, ENABLE );
000120  2201              MOVS     r2,#1
000122  f44f61e0          MOV      r1,#0x700
000126  482a              LDR      r0,|L1.464|
000128  f7fffffe          BL       I2C_ITConfig
;;;78     }
00012c  b005              ADD      sp,sp,#0x14
00012e  bd00              POP      {pc}
;;;79     
                          ENDP

                  IIC2_INIT PROC
;;;96     /*IIC初始化函数*/
;;;97     void IIC2_INIT(void)
000130  b510              PUSH     {r4,lr}
;;;98     {
;;;99     	IIC2_Config();
000132  f7fffffe          BL       IIC2_Config
;;;100    }
000136  bd10              POP      {r4,pc}
;;;101    
                          ENDP

                  LED_Config PROC
;;;104    /* LED初始化函数 */
;;;105    void LED_Config(void)
000138  b508              PUSH     {r3,lr}
;;;106    {
;;;107    	GPIO_InitTypeDef GPIO_InitStructure;
;;;108    	
;;;109        RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOE, ENABLE);					
00013a  2101              MOVS     r1,#1
00013c  2040              MOVS     r0,#0x40
00013e  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;110    	RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO , ENABLE);
000142  2101              MOVS     r1,#1
000144  4608              MOV      r0,r1
000146  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;111    	
;;;112    	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4 |  GPIO_Pin_5 | GPIO_Pin_6 | GPIO_Pin_7;       
00014a  20f0              MOVS     r0,#0xf0
00014c  f8ad0000          STRH     r0,[sp,#0]
;;;113    	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;                                        // 当设置为I2C2功能时，端口必须设为复用开漏输出，如果设																									 //为复用推挽输出有可能损坏端口！！！
000150  2010              MOVS     r0,#0x10
000152  f88d0003          STRB     r0,[sp,#3]
;;;114    	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz; 
000156  2003              MOVS     r0,#3
000158  f88d0002          STRB     r0,[sp,#2]
;;;115    	GPIO_Init(GPIOB, &GPIO_InitStructure); 
00015c  4669              MOV      r1,sp
00015e  481b              LDR      r0,|L1.460|
000160  f7fffffe          BL       GPIO_Init
;;;116    }
000164  bd08              POP      {r3,pc}
;;;117    
                          ENDP

                  Exit_Config PROC
;;;118    void Exit_Config(void)
000166  b51f              PUSH     {r0-r4,lr}
;;;119    {
;;;120    	GPIO_InitTypeDef GPIO_InitStructure; 
;;;121    	EXTI_InitTypeDef EXTI_InitStructure;
;;;122    	NVIC_InitTypeDef NVIC_InitStructure;
;;;123    	/* config the extiline() clock and AFIO clock */
;;;124    	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOE | RCC_APB2Periph_AFIO,ENABLE);
000168  2101              MOVS     r1,#1
00016a  2041              MOVS     r0,#0x41
00016c  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;125    												  
;;;126      /* 配置P[A|B|C|D|E]13为中断源 */
;;;127      NVIC_InitStructure.NVIC_IRQChannel = EXTI15_10_IRQn | EXTI9_5_IRQn;
000170  203f              MOVS     r0,#0x3f
000172  f88d0000          STRB     r0,[sp,#0]
;;;128      NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
000176  2000              MOVS     r0,#0
000178  f88d0001          STRB     r0,[sp,#1]
;;;129      NVIC_InitStructure.NVIC_IRQChannelSubPriority = 1;
00017c  2001              MOVS     r0,#1
00017e  f88d0002          STRB     r0,[sp,#2]
;;;130      NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
000182  f88d0003          STRB     r0,[sp,#3]
;;;131      NVIC_Init(&NVIC_InitStructure);
000186  4668              MOV      r0,sp
000188  f7fffffe          BL       NVIC_Init
;;;132    
;;;133    	/* EXTI line gpio config() */	
;;;134      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8 | GPIO_Pin_9 | GPIO_Pin_10;       
00018c  f44f60e0          MOV      r0,#0x700
000190  f8ad000c          STRH     r0,[sp,#0xc]
;;;135      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;	 // 上拉输入
000194  2048              MOVS     r0,#0x48
000196  f88d000f          STRB     r0,[sp,#0xf]
;;;136      GPIO_Init(GPIOE, &GPIO_InitStructure);
00019a  a903              ADD      r1,sp,#0xc
00019c  480e              LDR      r0,|L1.472|
00019e  f7fffffe          BL       GPIO_Init
;;;137    
;;;138    	/* EXTI line() mode config */
;;;139      GPIO_EXTILineConfig(GPIO_PortSourceGPIOE, GPIO_PinSource10 | GPIO_PinSource9 | GPIO_PinSource8); 
0001a2  210b              MOVS     r1,#0xb
0001a4  2004              MOVS     r0,#4
0001a6  f7fffffe          BL       GPIO_EXTILineConfig
;;;140      EXTI_InitStructure.EXTI_Line = EXTI_Line10 | EXTI_Line9 | EXTI_Line8;
0001aa  f44f60e0          MOV      r0,#0x700
0001ae  9001              STR      r0,[sp,#4]
;;;141      EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
0001b0  2000              MOVS     r0,#0
0001b2  f88d0008          STRB     r0,[sp,#8]
;;;142      EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling; //下降沿中断
0001b6  200c              MOVS     r0,#0xc
0001b8  f88d0009          STRB     r0,[sp,#9]
;;;143      EXTI_InitStructure.EXTI_LineCmd = ENABLE;
0001bc  2001              MOVS     r0,#1
0001be  f88d000a          STRB     r0,[sp,#0xa]
;;;144      EXTI_Init(&EXTI_InitStructure); 
0001c2  a801              ADD      r0,sp,#4
0001c4  f7fffffe          BL       EXTI_Init
;;;145    }
0001c8  bd1f              POP      {r0-r4,pc}
                          ENDP

0001ca  0000              DCW      0x0000
                  |L1.460|
                          DCD      0x40010c00
                  |L1.464|
                          DCD      0x40005800
                  |L1.468|
                          DCD      0x00030d40
                  |L1.472|
                          DCD      0x40011800
