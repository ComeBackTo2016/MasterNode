; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--list --debug -c --asm --interleave -o..\..\output\main.o --asm_dir=..\..\Listing\ --list_dir=..\..\Listing\ --depend=..\..\output\main.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Libraries\CMSIS -I..\..\User -I..\..\Libraries\FWlib\inc -I..\..\User\Alogrisem\inc -I..\..\User\BSP_Init\inc -I..\..\User\exDev\inc -IH:\CETC\Project\第二代机器鱼程序\AV1.3\Project\RVMDK（uv4）\RTE -ID:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=520 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -W --omf_browse=..\..\output\main.crf ..\..\User\main.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  main PROC
;;;11     
;;;12     int main(void)
000000  2001              MOVS     r0,#1
000002  f3808810          MSR      PRIMASK,r0
000006  bf00              NOP      
;;;13     {	
;;;14     	CLI();	
;;;15     	SysTick_Init();
000008  f7fffffe          BL       SysTick_Init
;;;16     	PWM_INIT();					// PA0-1-6-7	PB0-1
00000c  f7fffffe          BL       PWM_INIT
;;;17     	UART_INIT();				// U1-PA09-PA10		X-U2-PA02-PA03	X-U3-PB10-PB11
000010  f7fffffe          BL       UART_INIT
;;;18     	TIMER_INIT();
000014  f7fffffe          BL       TIMER_INIT
;;;19         IOIIC_Init();               // IOIIC using PB06 PB07
000018  f7fffffe          BL       IOIIC_Init
;;;20         IIC2_INIT();                // IIC2  using PB10 PB11   
00001c  f7fffffe          BL       IIC2_INIT
;;;21     //	SPI_FLASH_Init();           // CS using PA2
;;;22     	NVIC_of_All();
000020  f7fffffe          BL       NVIC_of_All
;;;23     	SEI();
000024  2000              MOVS     r0,#0
000026  f3808810          MSR      PRIMASK,r0
00002a  bf00              NOP      
;;;24     	
;;;25     	PCout(13) = 1;
00002c  2001              MOVS     r0,#1
00002e  493e              LDR      r1,|L1.296|
000030  6008              STR      r0,[r1,#0]
;;;26     	while (1)
000032  e003              B        |L1.60|
                  |L1.52|
;;;27     	{
;;;28     		Delay_ms(10);
000034  f44f707a          MOV      r0,#0x3e8
000038  f7fffffe          BL       Delay_us
                  |L1.60|
00003c  e7fa              B        |L1.52|
;;;29     		
;;;30     	}
;;;31     }
;;;32     //OutPut_Data(); //uart2
                          ENDP

                  CRC_CHECK PROC
;;;33     /*********************************************END OF FILE**********************/
;;;34     unsigned short CRC_CHECK(unsigned char *Buf, unsigned char CRC_CNT)
00003e  b530              PUSH     {r4,r5,lr}
;;;35     {
000040  4602              MOV      r2,r0
000042  460b              MOV      r3,r1
;;;36         unsigned short CRC_Temp;
;;;37         unsigned char i,j;
;;;38         CRC_Temp = 0xffff;
000044  f64f70ff          MOV      r0,#0xffff
;;;39     
;;;40         for (i=0;i<CRC_CNT; i++){
000048  2100              MOVS     r1,#0
00004a  e012              B        |L1.114|
                  |L1.76|
;;;41             CRC_Temp ^= Buf[i];
00004c  5c55              LDRB     r5,[r2,r1]
00004e  4068              EORS     r0,r0,r5
;;;42             for (j=0;j<8;j++) {
000050  2400              MOVS     r4,#0
000052  e00a              B        |L1.106|
                  |L1.84|
;;;43                 if (CRC_Temp & 0x01)
000054  f0000501          AND      r5,r0,#1
000058  b125              CBZ      r5,|L1.100|
;;;44                     CRC_Temp = (CRC_Temp >>1 ) ^ 0xa001;
00005a  f24a0501          MOV      r5,#0xa001
00005e  ea850060          EOR      r0,r5,r0,ASR #1
000062  e000              B        |L1.102|
                  |L1.100|
;;;45                 else
;;;46                     CRC_Temp = CRC_Temp >> 1;
000064  1040              ASRS     r0,r0,#1
                  |L1.102|
000066  1c65              ADDS     r5,r4,#1              ;42
000068  b2ec              UXTB     r4,r5                 ;42
                  |L1.106|
00006a  2c08              CMP      r4,#8                 ;42
00006c  dbf2              BLT      |L1.84|
00006e  1c4d              ADDS     r5,r1,#1              ;40
000070  b2e9              UXTB     r1,r5                 ;40
                  |L1.114|
000072  4299              CMP      r1,r3                 ;40
000074  dbea              BLT      |L1.76|
;;;47             }
;;;48         }
;;;49         return(CRC_Temp);
;;;50     }
000076  bd30              POP      {r4,r5,pc}
;;;51     
                          ENDP

                  OutPut_Data PROC
;;;52     void OutPut_Data(void)
000078  b530              PUSH     {r4,r5,lr}
;;;53     {
00007a  b08b              SUB      sp,sp,#0x2c
;;;54         int temp[4] = {0};
00007c  2000              MOVS     r0,#0
00007e  9007              STR      r0,[sp,#0x1c]
000080  9008              STR      r0,[sp,#0x20]
000082  9009              STR      r0,[sp,#0x24]
000084  900a              STR      r0,[sp,#0x28]
;;;55         unsigned int temp1[4] = {0};
000086  9003              STR      r0,[sp,#0xc]
000088  9004              STR      r0,[sp,#0x10]
00008a  9005              STR      r0,[sp,#0x14]
00008c  9006              STR      r0,[sp,#0x18]
;;;56         unsigned char databuf[10] = {0};
00008e  9000              STR      r0,[sp,#0]
000090  9001              STR      r0,[sp,#4]
000092  9002              STR      r0,[sp,#8]
;;;57         unsigned char i;
;;;58         unsigned short CRC16 = 0;
000094  2500              MOVS     r5,#0
;;;59         for(i=0;i<4;i++)
000096  2400              MOVS     r4,#0
000098  e00d              B        |L1.182|
                  |L1.154|
;;;60         {
;;;61             temp[i]  = (int)OutData[i];
00009a  4824              LDR      r0,|L1.300|
00009c  f9300014          LDRSH    r0,[r0,r4,LSL #1]
0000a0  a907              ADD      r1,sp,#0x1c
0000a2  f8410024          STR      r0,[r1,r4,LSL #2]
;;;62             temp1[i] = (unsigned int)temp[i];
0000a6  a807              ADD      r0,sp,#0x1c
0000a8  f8500024          LDR      r0,[r0,r4,LSL #2]
0000ac  a903              ADD      r1,sp,#0xc
0000ae  f8410024          STR      r0,[r1,r4,LSL #2]
0000b2  1c60              ADDS     r0,r4,#1              ;59
0000b4  b2c4              UXTB     r4,r0                 ;59
                  |L1.182|
0000b6  2c04              CMP      r4,#4                 ;59
0000b8  dbef              BLT      |L1.154|
;;;63         }
;;;64     
;;;65         for(i=0;i<4;i++)
0000ba  2400              MOVS     r4,#0
0000bc  e010              B        |L1.224|
                  |L1.190|
;;;66         {
;;;67             databuf[i*2]   = (unsigned char)(temp1[i]%256);
0000be  a803              ADD      r0,sp,#0xc
0000c0  f8100024          LDRB     r0,[r0,r4,LSL #2]
0000c4  f80d0014          STRB     r0,[sp,r4,LSL #1]
;;;68             databuf[i*2+1] = (unsigned char)(temp1[i]/256);
0000c8  a803              ADD      r0,sp,#0xc
0000ca  f8300024          LDRH     r0,[r0,r4,LSL #2]
0000ce  f3c02007          UBFX     r0,r0,#8,#8
0000d2  2101              MOVS     r1,#1
0000d4  eb010144          ADD      r1,r1,r4,LSL #1
0000d8  f80d0001          STRB     r0,[sp,r1]
0000dc  1c60              ADDS     r0,r4,#1              ;65
0000de  b2c4              UXTB     r4,r0                 ;65
                  |L1.224|
0000e0  2c04              CMP      r4,#4                 ;65
0000e2  dbec              BLT      |L1.190|
;;;69         }
;;;70     
;;;71         CRC16 = CRC_CHECK(databuf,8);
0000e4  2108              MOVS     r1,#8
0000e6  4668              MOV      r0,sp
0000e8  f7fffffe          BL       CRC_CHECK
0000ec  4605              MOV      r5,r0
;;;72         databuf[8] = CRC16%256;
0000ee  4628              MOV      r0,r5
0000f0  17e9              ASRS     r1,r5,#31
0000f2  eb056111          ADD      r1,r5,r1,LSR #24
0000f6  1209              ASRS     r1,r1,#8
0000f8  eba52101          SUB      r1,r5,r1,LSL #8
0000fc  b2c9              UXTB     r1,r1
0000fe  f88d1008          STRB     r1,[sp,#8]
;;;73         databuf[9] = CRC16/256;
000102  17e9              ASRS     r1,r5,#31
000104  eb056111          ADD      r1,r5,r1,LSR #24
000108  0a09              LSRS     r1,r1,#8
00010a  f88d1009          STRB     r1,[sp,#9]
;;;74     
;;;75         for(i=0;i<10;i++)        
00010e  2400              MOVS     r4,#0
000110  e005              B        |L1.286|
                  |L1.274|
;;;76         {
;;;77             USART1_SendByte((char)databuf[i]);
000112  f81d0004          LDRB     r0,[sp,r4]
000116  f7fffffe          BL       USART1_SendByte
00011a  1c60              ADDS     r0,r4,#1              ;75
00011c  b2c4              UXTB     r4,r0                 ;75
                  |L1.286|
00011e  2c0a              CMP      r4,#0xa               ;75
000120  dbf7              BLT      |L1.274|
;;;78         }
;;;79     }
000122  b00b              ADD      sp,sp,#0x2c
000124  bd30              POP      {r4,r5,pc}
                          ENDP

000126  0000              DCW      0x0000
                  |L1.296|
                          DCD      0x422201b4
                  |L1.300|
                          DCD      OutData

                          AREA ||.data||, DATA, ALIGN=1

                  OutData
                          %        8

                  __ARM_use_no_argv EQU 0
