; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--list --debug -c --asm --interleave -o..\..\output\encode.o --asm_dir=..\..\Listing\ --list_dir=..\..\Listing\ --depend=..\..\output\encode.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Libraries\CMSIS -I..\..\User -I..\..\Libraries\FWlib\inc -I..\..\User\Alogrisem\inc -I..\..\User\BSP_Init\inc -I..\..\User\exDev\inc -IH:\CETC\Project\第二代机器鱼程序\AV1.3\Project\RVMDK（uv4）\RTE -ID:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=520 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -W --omf_browse=..\..\output\encode.crf ..\..\User\BSP_Init\src\encode.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  TIM1_EncoderMode_PE9_PE11_Config PROC
;;;15     **************************************************************************/
;;;16     void TIM1_EncoderMode_PE9_PE11_Config(void)
000000  b500              PUSH     {lr}
;;;17     {
000002  b089              SUB      sp,sp,#0x24
;;;18         GPIO_InitTypeDef GPIO_InitStructure;
;;;19         TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
;;;20         TIM_ICInitTypeDef TIM_ICInitStructure;
;;;21         NVIC_InitTypeDef NVIC_InitStructure;
;;;22         /*----------------------------------------------------------------*/
;;;23     
;;;24         RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOE, ENABLE);
000004  2101              MOVS     r1,#1
000006  2040              MOVS     r0,#0x40
000008  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;25         GPIO_StructInit(&GPIO_InitStructure);
00000c  a808              ADD      r0,sp,#0x20
00000e  f7fffffe          BL       GPIO_StructInit
;;;26         /* Configure PE.09,11 as encoder input */
;;;27         GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9 | GPIO_Pin_11;
000012  f44f6020          MOV      r0,#0xa00
000016  f8ad0020          STRH     r0,[sp,#0x20]
;;;28         GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
00001a  2004              MOVS     r0,#4
00001c  f88d0023          STRB     r0,[sp,#0x23]
;;;29         GPIO_Init(GPIOE, &GPIO_InitStructure);
000020  a908              ADD      r1,sp,#0x20
000022  48fe              LDR      r0,|L1.1052|
000024  f7fffffe          BL       GPIO_Init
;;;30         /*----------------------------------------------------------------*/
;;;31         RCC_APB2PeriphClockCmd(RCC_APB2Periph_TIM1, ENABLE); 
000028  2101              MOVS     r1,#1
00002a  02c8              LSLS     r0,r1,#11
00002c  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;32         TIM_DeInit(TIM1);
000030  48fb              LDR      r0,|L1.1056|
000032  f7fffffe          BL       TIM_DeInit
;;;33         RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO, ENABLE);
000036  2101              MOVS     r1,#1
000038  4608              MOV      r0,r1
00003a  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;34         GPIO_PinRemapConfig(GPIO_FullRemap_TIM1, ENABLE);    
00003e  2101              MOVS     r1,#1
000040  48f8              LDR      r0,|L1.1060|
000042  f7fffffe          BL       GPIO_PinRemapConfig
;;;35     
;;;36         TIM_TimeBaseStructure.TIM_Period = ENCODER_PERIOD;      
000046  f2427010          MOV      r0,#0x2710
00004a  f8ad0018          STRH     r0,[sp,#0x18]
;;;37         TIM_TimeBaseStructure.TIM_Prescaler = ENCODER_PRES;           
00004e  2000              MOVS     r0,#0
000050  f8ad0014          STRH     r0,[sp,#0x14]
;;;38         TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1 ;       
000054  f8ad001a          STRH     r0,[sp,#0x1a]
;;;39         TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up; 
000058  f8ad0016          STRH     r0,[sp,#0x16]
;;;40         TIM_TimeBaseInit(TIM1, &TIM_TimeBaseStructure);
00005c  a905              ADD      r1,sp,#0x14
00005e  48f0              LDR      r0,|L1.1056|
000060  f7fffffe          BL       TIM_TimeBaseInit
;;;41         /*-----------------------------------------------------------------*/
;;;42     		NVIC_InitStructure.NVIC_IRQChannel = TIM1_UP_IRQn;
000064  2019              MOVS     r0,#0x19
000066  f88d0004          STRB     r0,[sp,#4]
;;;43     		NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
00006a  2000              MOVS     r0,#0
00006c  f88d0005          STRB     r0,[sp,#5]
;;;44     		NVIC_InitStructure.NVIC_IRQChannelSubPriority = 3;
000070  2003              MOVS     r0,#3
000072  f88d0006          STRB     r0,[sp,#6]
;;;45     		NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
000076  2001              MOVS     r0,#1
000078  f88d0007          STRB     r0,[sp,#7]
;;;46     		NVIC_Init(&NVIC_InitStructure);		
00007c  a801              ADD      r0,sp,#4
00007e  f7fffffe          BL       NVIC_Init
;;;47     
;;;48         TIM_EncoderInterfaceConfig(TIM1, TIM_EncoderMode_TI12, TIM_ICPolarity_Rising, TIM_ICPolarity_Rising); //TIM_ICPolarity_Rising?????
000082  2300              MOVS     r3,#0
000084  461a              MOV      r2,r3
000086  2103              MOVS     r1,#3
000088  48e5              LDR      r0,|L1.1056|
00008a  f7fffffe          BL       TIM_EncoderInterfaceConfig
;;;49         TIM_ICStructInit(&TIM_ICInitStructure);
00008e  a802              ADD      r0,sp,#8
000090  f7fffffe          BL       TIM_ICStructInit
;;;50         TIM_ICInitStructure.TIM_ICFilter = 6;       
000094  2006              MOVS     r0,#6
000096  f8ad0010          STRH     r0,[sp,#0x10]
;;;51         TIM_ICInit(TIM1, &TIM_ICInitStructure);
00009a  a902              ADD      r1,sp,#8
00009c  48e0              LDR      r0,|L1.1056|
00009e  f7fffffe          BL       TIM_ICInit
;;;52     		TIM_ClearFlag(TIM1, TIM_FLAG_Update); 
0000a2  2101              MOVS     r1,#1
0000a4  48de              LDR      r0,|L1.1056|
0000a6  f7fffffe          BL       TIM_ClearFlag
;;;53         TIM_ITConfig(TIM1, TIM_IT_Update, ENABLE); 
0000aa  2201              MOVS     r2,#1
0000ac  4611              MOV      r1,r2
0000ae  48dc              LDR      r0,|L1.1056|
0000b0  f7fffffe          BL       TIM_ITConfig
;;;54         //Reset counter
;;;55         TIM1->CNT = 0;
0000b4  2000              MOVS     r0,#0
0000b6  49da              LDR      r1,|L1.1056|
0000b8  3124              ADDS     r1,r1,#0x24
0000ba  8008              STRH     r0,[r1,#0]
;;;56         TIM_Cmd(TIM1, ENABLE);   
0000bc  2101              MOVS     r1,#1
0000be  48d8              LDR      r0,|L1.1056|
0000c0  f7fffffe          BL       TIM_Cmd
;;;57     }
0000c4  b009              ADD      sp,sp,#0x24
0000c6  bd00              POP      {pc}
;;;58     
                          ENDP

                  TIM1_EncoderMode_PA8_PA9_Config PROC
;;;66     **************************************************************************/
;;;67     void TIM1_EncoderMode_PA8_PA9_Config(void)
0000c8  b500              PUSH     {lr}
;;;68     {
0000ca  b089              SUB      sp,sp,#0x24
;;;69         GPIO_InitTypeDef GPIO_InitStructure;
;;;70         TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
;;;71         TIM_ICInitTypeDef TIM_ICInitStructure;
;;;72     		NVIC_InitTypeDef NVIC_InitStructure;
;;;73         /*----------------------------------------------------------------*/
;;;74     
;;;75         RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);
0000cc  2101              MOVS     r1,#1
0000ce  2004              MOVS     r0,#4
0000d0  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;76         GPIO_StructInit(&GPIO_InitStructure);
0000d4  a808              ADD      r0,sp,#0x20
0000d6  f7fffffe          BL       GPIO_StructInit
;;;77         GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9 | GPIO_Pin_8;
0000da  f44f7040          MOV      r0,#0x300
0000de  f8ad0020          STRH     r0,[sp,#0x20]
;;;78         GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
0000e2  2004              MOVS     r0,#4
0000e4  f88d0023          STRB     r0,[sp,#0x23]
;;;79         GPIO_Init(GPIOA, &GPIO_InitStructure);
0000e8  a908              ADD      r1,sp,#0x20
0000ea  48cf              LDR      r0,|L1.1064|
0000ec  f7fffffe          BL       GPIO_Init
;;;80         /*----------------------------------------------------------------*/
;;;81         RCC_APB2PeriphClockCmd(RCC_APB2Periph_TIM1, ENABLE); //??TIM1
0000f0  2101              MOVS     r1,#1
0000f2  02c8              LSLS     r0,r1,#11
0000f4  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;82         RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO, ENABLE);  
0000f8  2101              MOVS     r1,#1
0000fa  4608              MOV      r0,r1
0000fc  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;83     		TIM_DeInit(TIM1);
000100  48c7              LDR      r0,|L1.1056|
000102  f7fffffe          BL       TIM_DeInit
;;;84     
;;;85         TIM_TimeBaseStructure.TIM_Period = ENCODER_PERIOD;    
000106  f2427010          MOV      r0,#0x2710
00010a  f8ad0018          STRH     r0,[sp,#0x18]
;;;86         TIM_TimeBaseStructure.TIM_Prescaler = ENCODER_PRES;          
00010e  2000              MOVS     r0,#0
000110  f8ad0014          STRH     r0,[sp,#0x14]
;;;87         TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1 ;    
000114  f8ad001a          STRH     r0,[sp,#0x1a]
;;;88         TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up; 
000118  f8ad0016          STRH     r0,[sp,#0x16]
;;;89     
;;;90         TIM_TimeBaseInit(TIM1, &TIM_TimeBaseStructure);
00011c  a905              ADD      r1,sp,#0x14
00011e  48c0              LDR      r0,|L1.1056|
000120  f7fffffe          BL       TIM_TimeBaseInit
;;;91     		
;;;92     		NVIC_InitStructure.NVIC_IRQChannel = TIM1_UP_IRQn;
000124  2019              MOVS     r0,#0x19
000126  f88d0004          STRB     r0,[sp,#4]
;;;93     		NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;
00012a  2001              MOVS     r0,#1
00012c  f88d0005          STRB     r0,[sp,#5]
;;;94     		NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
000130  2000              MOVS     r0,#0
000132  f88d0006          STRB     r0,[sp,#6]
;;;95     		NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
000136  2001              MOVS     r0,#1
000138  f88d0007          STRB     r0,[sp,#7]
;;;96     		NVIC_Init(&NVIC_InitStructure);
00013c  a801              ADD      r0,sp,#4
00013e  f7fffffe          BL       NVIC_Init
;;;97         /*-----------------------------------------------------------------*/
;;;98         TIM_EncoderInterfaceConfig(TIM1, TIM_EncoderMode_TI12, TIM_ICPolarity_Rising, TIM_ICPolarity_Rising); //TIM_ICPolarity_Rising?????
000142  2300              MOVS     r3,#0
000144  461a              MOV      r2,r3
000146  2103              MOVS     r1,#3
000148  48b5              LDR      r0,|L1.1056|
00014a  f7fffffe          BL       TIM_EncoderInterfaceConfig
;;;99         TIM_ICStructInit(&TIM_ICInitStructure);
00014e  a802              ADD      r0,sp,#8
000150  f7fffffe          BL       TIM_ICStructInit
;;;100        TIM_ICInitStructure.TIM_ICFilter = 6;     
000154  2006              MOVS     r0,#6
000156  f8ad0010          STRH     r0,[sp,#0x10]
;;;101        TIM_ICInit(TIM1, &TIM_ICInitStructure);
00015a  a902              ADD      r1,sp,#8
00015c  48b0              LDR      r0,|L1.1056|
00015e  f7fffffe          BL       TIM_ICInit
;;;102    		
;;;103    		TIM_ClearFlag(TIM1, TIM_FLAG_Update); 
000162  2101              MOVS     r1,#1
000164  48ae              LDR      r0,|L1.1056|
000166  f7fffffe          BL       TIM_ClearFlag
;;;104        TIM_ITConfig(TIM1, TIM_IT_Update, ENABLE); 
00016a  2201              MOVS     r2,#1
00016c  4611              MOV      r1,r2
00016e  48ac              LDR      r0,|L1.1056|
000170  f7fffffe          BL       TIM_ITConfig
;;;105        //Reset counter
;;;106        TIM1->CNT = 0;
000174  2000              MOVS     r0,#0
000176  49aa              LDR      r1,|L1.1056|
000178  3124              ADDS     r1,r1,#0x24
00017a  8008              STRH     r0,[r1,#0]
;;;107        TIM_Cmd(TIM1, ENABLE);  
00017c  2101              MOVS     r1,#1
00017e  48a8              LDR      r0,|L1.1056|
000180  f7fffffe          BL       TIM_Cmd
;;;108    }
000184  b009              ADD      sp,sp,#0x24
000186  bd00              POP      {pc}
;;;109    /**************************************/
                          ENDP

                  TIM2_EncoderMode_PA0_PA1_Config PROC
;;;116    /*定时器2配置为编码器模式，管教未印射*/
;;;117    void TIM2_EncoderMode_PA0_PA1_Config(void)
000188  b500              PUSH     {lr}
;;;118    {
00018a  b089              SUB      sp,sp,#0x24
;;;119        GPIO_InitTypeDef GPIO_InitStructure;
;;;120        TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
;;;121        TIM_ICInitTypeDef TIM_ICInitStructure;
;;;122        NVIC_InitTypeDef NVIC_InitStructure;
;;;123    
;;;124        /*----------------------------------------------------------------*/
;;;125    	
;;;126        RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);
00018c  2101              MOVS     r1,#1
00018e  2004              MOVS     r0,#4
000190  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;127        GPIO_StructInit(&GPIO_InitStructure);
000194  a808              ADD      r0,sp,#0x20
000196  f7fffffe          BL       GPIO_StructInit
;;;128        /* Configure PA.0 1 encoder input */
;;;129        GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0 | GPIO_Pin_1;
00019a  2003              MOVS     r0,#3
00019c  f8ad0020          STRH     r0,[sp,#0x20]
;;;130        GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
0001a0  2004              MOVS     r0,#4
0001a2  f88d0023          STRB     r0,[sp,#0x23]
;;;131        GPIO_Init(GPIOA, &GPIO_InitStructure);
0001a6  a908              ADD      r1,sp,#0x20
0001a8  489f              LDR      r0,|L1.1064|
0001aa  f7fffffe          BL       GPIO_Init
;;;132        /*----------------------------------------------------------------*/
;;;133        RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE); //??
0001ae  2101              MOVS     r1,#1
0001b0  4608              MOV      r0,r1
0001b2  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;134        TIM_DeInit(TIM2);
0001b6  f04f4080          MOV      r0,#0x40000000
0001ba  f7fffffe          BL       TIM_DeInit
;;;135        TIM_TimeBaseStructure.TIM_Period = ENCODER_PERIOD;      //
0001be  f2427010          MOV      r0,#0x2710
0001c2  f8ad0018          STRH     r0,[sp,#0x18]
;;;136        TIM_TimeBaseStructure.TIM_Prescaler = ENCODER_PRES;           //?????:
0001c6  2000              MOVS     r0,#0
0001c8  f8ad0014          STRH     r0,[sp,#0x14]
;;;137        TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1 ;       //????????:???
0001cc  f8ad001a          STRH     r0,[sp,#0x1a]
;;;138        TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  //??????
0001d0  f8ad0016          STRH     r0,[sp,#0x16]
;;;139    
;;;140        /*???TIM2??? */
;;;141        TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);
0001d4  a905              ADD      r1,sp,#0x14
0001d6  f04f4080          MOV      r0,#0x40000000
0001da  f7fffffe          BL       TIM_TimeBaseInit
;;;142    		
;;;143    		NVIC_InitStructure.NVIC_IRQChannel = TIM2_IRQn;
0001de  201c              MOVS     r0,#0x1c
0001e0  f88d0004          STRB     r0,[sp,#4]
;;;144    		NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;
0001e4  2001              MOVS     r0,#1
0001e6  f88d0005          STRB     r0,[sp,#5]
;;;145    		NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
0001ea  2000              MOVS     r0,#0
0001ec  f88d0006          STRB     r0,[sp,#6]
;;;146    		NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
0001f0  2001              MOVS     r0,#1
0001f2  f88d0007          STRB     r0,[sp,#7]
;;;147    		NVIC_Init(&NVIC_InitStructure);
0001f6  a801              ADD      r0,sp,#4
0001f8  f7fffffe          BL       NVIC_Init
;;;148    		
;;;149        TIM_EncoderInterfaceConfig(TIM2, TIM_EncoderMode_TI12, TIM_ICPolarity_Rising, TIM_ICPolarity_Rising); //TIM_ICPolarity_Rising?????
0001fc  2300              MOVS     r3,#0
0001fe  461a              MOV      r2,r3
000200  2103              MOVS     r1,#3
000202  f04f4080          MOV      r0,#0x40000000
000206  f7fffffe          BL       TIM_EncoderInterfaceConfig
;;;150        TIM_ICStructInit(&TIM_ICInitStructure);
00020a  a802              ADD      r0,sp,#8
00020c  f7fffffe          BL       TIM_ICStructInit
;;;151        TIM_ICInitStructure.TIM_ICFilter = 6;         //?????
000210  2006              MOVS     r0,#6
000212  f8ad0010          STRH     r0,[sp,#0x10]
;;;152        TIM_ICInit(TIM2, &TIM_ICInitStructure);
000216  a902              ADD      r1,sp,#8
000218  f04f4080          MOV      r0,#0x40000000
00021c  f7fffffe          BL       TIM_ICInit
;;;153    		
;;;154        TIM_ClearFlag(TIM2, TIM_FLAG_Update);
000220  2101              MOVS     r1,#1
000222  0788              LSLS     r0,r1,#30
000224  f7fffffe          BL       TIM_ClearFlag
;;;155        TIM_ITConfig(TIM2, TIM_IT_Update, ENABLE); 
000228  2201              MOVS     r2,#1
00022a  4611              MOV      r1,r2
00022c  0790              LSLS     r0,r2,#30
00022e  f7fffffe          BL       TIM_ITConfig
;;;156    		
;;;157        TIM2->CNT = 0;
000232  2000              MOVS     r0,#0
000234  f04f4180          MOV      r1,#0x40000000
000238  8488              STRH     r0,[r1,#0x24]
;;;158        TIM_Cmd(TIM2, ENABLE);   //?????2
00023a  2101              MOVS     r1,#1
00023c  0788              LSLS     r0,r1,#30
00023e  f7fffffe          BL       TIM_Cmd
;;;159    }
000242  b009              ADD      sp,sp,#0x24
000244  bd00              POP      {pc}
;;;160    /**************************************************************************
                          ENDP

                  TIM2_EncoderMode_PA15_PB3_Config PROC
;;;165    **************************************************************************/
;;;166    void TIM2_EncoderMode_PA15_PB3_Config(void)
000246  b500              PUSH     {lr}
;;;167    {
000248  b087              SUB      sp,sp,#0x1c
;;;168        GPIO_InitTypeDef GPIO_InitStructure;
;;;169        TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
;;;170        TIM_ICInitTypeDef TIM_ICInitStructure;
;;;171        //TIM_OCInitTypeDef  TIM_OCInitStructure;
;;;172        /*----------------------------------------------------------------*/
;;;173        RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);
00024a  2101              MOVS     r1,#1
00024c  2004              MOVS     r0,#4
00024e  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;174        GPIO_StructInit(&GPIO_InitStructure);
000252  a806              ADD      r0,sp,#0x18
000254  f7fffffe          BL       GPIO_StructInit
;;;175        /* Configure PA15 encoder input */
;;;176        GPIO_InitStructure.GPIO_Pin = GPIO_Pin_15 ;
000258  f44f4000          MOV      r0,#0x8000
00025c  f8ad0018          STRH     r0,[sp,#0x18]
;;;177        GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
000260  2004              MOVS     r0,#4
000262  f88d001b          STRB     r0,[sp,#0x1b]
;;;178        GPIO_Init(GPIOA, &GPIO_InitStructure);
000266  a906              ADD      r1,sp,#0x18
000268  486f              LDR      r0,|L1.1064|
00026a  f7fffffe          BL       GPIO_Init
;;;179    
;;;180        RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);
00026e  2101              MOVS     r1,#1
000270  2008              MOVS     r0,#8
000272  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;181        GPIO_StructInit(&GPIO_InitStructure);
000276  a806              ADD      r0,sp,#0x18
000278  f7fffffe          BL       GPIO_StructInit
;;;182        /* Configure PB3 as encoder input */
;;;183        GPIO_InitStructure.GPIO_Pin = GPIO_Pin_3;
00027c  2008              MOVS     r0,#8
00027e  f8ad0018          STRH     r0,[sp,#0x18]
;;;184        GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
000282  2004              MOVS     r0,#4
000284  f88d001b          STRB     r0,[sp,#0x1b]
;;;185        GPIO_Init(GPIOB, &GPIO_InitStructure);
000288  a906              ADD      r1,sp,#0x18
00028a  4868              LDR      r0,|L1.1068|
00028c  f7fffffe          BL       GPIO_Init
;;;186        /*----------------------------------------------------------------*/
;;;187    //
;;;188        RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO, ENABLE);
000290  2101              MOVS     r1,#1
000292  4608              MOV      r0,r1
000294  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;189        RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE); //??
000298  2101              MOVS     r1,#1
00029a  4608              MOV      r0,r1
00029c  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;190        TIM_DeInit(TIM2);
0002a0  f04f4080          MOV      r0,#0x40000000
0002a4  f7fffffe          BL       TIM_DeInit
;;;191        GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable, ENABLE);//??JTAG,??PA15?JTAG??
0002a8  2101              MOVS     r1,#1
0002aa  4861              LDR      r0,|L1.1072|
0002ac  f7fffffe          BL       GPIO_PinRemapConfig
;;;192        GPIO_PinRemapConfig(GPIO_FullRemap_TIM2, ENABLE);
0002b0  2101              MOVS     r1,#1
0002b2  4860              LDR      r0,|L1.1076|
0002b4  f7fffffe          BL       GPIO_PinRemapConfig
;;;193        
;;;194        TIM_TimeBaseStructure.TIM_Period = 0xffff;      //
0002b8  f64f70ff          MOV      r0,#0xffff
0002bc  f8ad0010          STRH     r0,[sp,#0x10]
;;;195        TIM_TimeBaseStructure.TIM_Prescaler = 0;           //?????:
0002c0  2000              MOVS     r0,#0
0002c2  f8ad000c          STRH     r0,[sp,#0xc]
;;;196        TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1 ;       //????????:???
0002c6  f8ad0012          STRH     r0,[sp,#0x12]
;;;197        TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  //??????
0002ca  f8ad000e          STRH     r0,[sp,#0xe]
;;;198        TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);
0002ce  a903              ADD      r1,sp,#0xc
0002d0  f04f4080          MOV      r0,#0x40000000
0002d4  f7fffffe          BL       TIM_TimeBaseInit
;;;199        /*-----------------------------------------------------------------*/
;;;200        //????                        ????
;;;201        TIM_EncoderInterfaceConfig(TIM2, TIM_EncoderMode_TI12, TIM_ICPolarity_Rising, TIM_ICPolarity_Rising); //TIM_ICPolarity_Rising?????
0002d8  2300              MOVS     r3,#0
0002da  461a              MOV      r2,r3
0002dc  2103              MOVS     r1,#3
0002de  f04f4080          MOV      r0,#0x40000000
0002e2  f7fffffe          BL       TIM_EncoderInterfaceConfig
;;;202        TIM_ICStructInit(&TIM_ICInitStructure);
0002e6  4668              MOV      r0,sp
0002e8  f7fffffe          BL       TIM_ICStructInit
;;;203        TIM_ICInitStructure.TIM_ICFilter = 6;         //?????
0002ec  2006              MOVS     r0,#6
0002ee  f8ad0008          STRH     r0,[sp,#8]
;;;204        TIM_ICInit(TIM2, &TIM_ICInitStructure);
0002f2  4669              MOV      r1,sp
0002f4  f04f4080          MOV      r0,#0x40000000
0002f8  f7fffffe          BL       TIM_ICInit
;;;205        TIM2->CNT = 0;
0002fc  2000              MOVS     r0,#0
0002fe  f04f4180          MOV      r1,#0x40000000
000302  8488              STRH     r0,[r1,#0x24]
;;;206        TIM_Cmd(TIM2, ENABLE);   //?????2
000304  2101              MOVS     r1,#1
000306  0788              LSLS     r0,r1,#30
000308  f7fffffe          BL       TIM_Cmd
;;;207    
;;;208    }
00030c  b007              ADD      sp,sp,#0x1c
00030e  bd00              POP      {pc}
;;;209    /**************************************************************************
                          ENDP

                  TIM3_EncoderMode_PA6_PA7_Config PROC
;;;214    **************************************************************************/
;;;215    void TIM3_EncoderMode_PA6_PA7_Config(void)
000310  b500              PUSH     {lr}
;;;216    {
000312  b089              SUB      sp,sp,#0x24
;;;217        GPIO_InitTypeDef GPIO_InitStructure;
;;;218        TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
;;;219        TIM_ICInitTypeDef TIM_ICInitStructure;
;;;220        NVIC_InitTypeDef NVIC_InitStructure;
;;;221    
;;;222        /*----------------------------------------------------------------*/
;;;223    
;;;224        RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);
000314  2101              MOVS     r1,#1
000316  2004              MOVS     r0,#4
000318  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;225        GPIO_StructInit(&GPIO_InitStructure);
00031c  a808              ADD      r0,sp,#0x20
00031e  f7fffffe          BL       GPIO_StructInit
;;;226        /* Configure PA6,7 as encoder input */
;;;227        GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6 | GPIO_Pin_7;
000322  20c0              MOVS     r0,#0xc0
000324  f8ad0020          STRH     r0,[sp,#0x20]
;;;228        GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
000328  2004              MOVS     r0,#4
00032a  f88d0023          STRB     r0,[sp,#0x23]
;;;229        GPIO_Init(GPIOA, &GPIO_InitStructure);
00032e  a908              ADD      r1,sp,#0x20
000330  483d              LDR      r0,|L1.1064|
000332  f7fffffe          BL       GPIO_Init
;;;230    
;;;231    
;;;232    
;;;233        RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3, ENABLE); //??TIM3
000336  2101              MOVS     r1,#1
000338  2002              MOVS     r0,#2
00033a  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;234        TIM_DeInit(TIM3);
00033e  483e              LDR      r0,|L1.1080|
000340  f7fffffe          BL       TIM_DeInit
;;;235        TIM_TimeBaseStructure.TIM_Period = ENCODER_PERIOD;      //
000344  f2427010          MOV      r0,#0x2710
000348  f8ad0018          STRH     r0,[sp,#0x18]
;;;236        TIM_TimeBaseStructure.TIM_Prescaler = ENCODER_PRES;           //?????:
00034c  2000              MOVS     r0,#0
00034e  f8ad0014          STRH     r0,[sp,#0x14]
;;;237        TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1 ;       //????????:???
000352  f8ad001a          STRH     r0,[sp,#0x1a]
;;;238        TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  //??????
000356  f8ad0016          STRH     r0,[sp,#0x16]
;;;239        TIM_TimeBaseInit(TIM3, &TIM_TimeBaseStructure);
00035a  a905              ADD      r1,sp,#0x14
00035c  4836              LDR      r0,|L1.1080|
00035e  f7fffffe          BL       TIM_TimeBaseInit
;;;240    		
;;;241    		NVIC_InitStructure.NVIC_IRQChannel = TIM3_IRQn;
000362  201d              MOVS     r0,#0x1d
000364  f88d0004          STRB     r0,[sp,#4]
;;;242    		NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
000368  2000              MOVS     r0,#0
00036a  f88d0005          STRB     r0,[sp,#5]
;;;243    		NVIC_InitStructure.NVIC_IRQChannelSubPriority = 3;
00036e  2003              MOVS     r0,#3
000370  f88d0006          STRB     r0,[sp,#6]
;;;244    		NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
000374  2001              MOVS     r0,#1
000376  f88d0007          STRB     r0,[sp,#7]
;;;245    		NVIC_Init(&NVIC_InitStructure);
00037a  a801              ADD      r0,sp,#4
00037c  f7fffffe          BL       NVIC_Init
;;;246    	
;;;247        /*-----------------------------------------------------------------*/
;;;248        //????                        ????
;;;249        TIM_EncoderInterfaceConfig(TIM3, TIM_EncoderMode_TI12, TIM_ICPolarity_Rising, TIM_ICPolarity_Rising); //TIM_ICPolarity_Rising?????
000380  2300              MOVS     r3,#0
000382  461a              MOV      r2,r3
000384  2103              MOVS     r1,#3
000386  482c              LDR      r0,|L1.1080|
000388  f7fffffe          BL       TIM_EncoderInterfaceConfig
;;;250        TIM_ICStructInit(&TIM_ICInitStructure);
00038c  a802              ADD      r0,sp,#8
00038e  f7fffffe          BL       TIM_ICStructInit
;;;251        TIM_ICInitStructure.TIM_ICFilter = 6;         //?????
000392  2006              MOVS     r0,#6
000394  f8ad0010          STRH     r0,[sp,#0x10]
;;;252        TIM_ICInit(TIM3, &TIM_ICInitStructure);
000398  a902              ADD      r1,sp,#8
00039a  4827              LDR      r0,|L1.1080|
00039c  f7fffffe          BL       TIM_ICInit
;;;253    		
;;;254    		TIM_ClearFlag(TIM3, TIM_FLAG_Update);
0003a0  2101              MOVS     r1,#1
0003a2  4825              LDR      r0,|L1.1080|
0003a4  f7fffffe          BL       TIM_ClearFlag
;;;255        TIM_ITConfig(TIM3, TIM_IT_Update, ENABLE); 
0003a8  2201              MOVS     r2,#1
0003aa  4611              MOV      r1,r2
0003ac  4822              LDR      r0,|L1.1080|
0003ae  f7fffffe          BL       TIM_ITConfig
;;;256    		
;;;257        //Reset counter
;;;258        TIM3->CNT = 0;
0003b2  2000              MOVS     r0,#0
0003b4  4920              LDR      r1,|L1.1080|
0003b6  3124              ADDS     r1,r1,#0x24
0003b8  8008              STRH     r0,[r1,#0]
;;;259        TIM_Cmd(TIM3, ENABLE);   //?????3
0003ba  2101              MOVS     r1,#1
0003bc  481e              LDR      r0,|L1.1080|
0003be  f7fffffe          BL       TIM_Cmd
;;;260    }
0003c2  b009              ADD      sp,sp,#0x24
0003c4  bd00              POP      {pc}
;;;261    /**************************************************************************
                          ENDP

                  TIM3_EncoderMode_PC6_PC7_Config PROC
;;;266    **************************************************************************/
;;;267    void TIM3_EncoderMode_PC6_PC7_Config(void)
0003c6  b500              PUSH     {lr}
;;;268    {
0003c8  b087              SUB      sp,sp,#0x1c
;;;269        GPIO_InitTypeDef GPIO_InitStructure;
;;;270        TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
;;;271        TIM_ICInitTypeDef TIM_ICInitStructure;
;;;272    
;;;273        /*----------------------------------------------------------------*/
;;;274    
;;;275        RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC, ENABLE);
0003ca  2101              MOVS     r1,#1
0003cc  2010              MOVS     r0,#0x10
0003ce  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;276        GPIO_StructInit(&GPIO_InitStructure);
0003d2  a806              ADD      r0,sp,#0x18
0003d4  f7fffffe          BL       GPIO_StructInit
;;;277        /* Configure PA.06,07 as encoder input */
;;;278        GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6 | GPIO_Pin_7;
0003d8  20c0              MOVS     r0,#0xc0
0003da  f8ad0018          STRH     r0,[sp,#0x18]
;;;279        GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
0003de  2004              MOVS     r0,#4
0003e0  f88d001b          STRB     r0,[sp,#0x1b]
;;;280        GPIO_Init(GPIOC, &GPIO_InitStructure);
0003e4  a906              ADD      r1,sp,#0x18
0003e6  4815              LDR      r0,|L1.1084|
0003e8  f7fffffe          BL       GPIO_Init
;;;281        /*----------------------------------------------------------------*/
;;;282    
;;;283        RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3, ENABLE); //??TIM3
0003ec  2101              MOVS     r1,#1
0003ee  2002              MOVS     r0,#2
0003f0  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;284        TIM_DeInit(TIM3);
0003f4  4810              LDR      r0,|L1.1080|
0003f6  f7fffffe          BL       TIM_DeInit
;;;285    
;;;286        RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO, ENABLE);
0003fa  2101              MOVS     r1,#1
0003fc  4608              MOV      r0,r1
0003fe  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;287        GPIO_PinRemapConfig(GPIO_FullRemap_TIM3, ENABLE);
000402  2101              MOVS     r1,#1
000404  480e              LDR      r0,|L1.1088|
000406  f7fffffe          BL       GPIO_PinRemapConfig
;;;288    
;;;289        TIM_TimeBaseStructure.TIM_Period = 0xffff;      //
00040a  f64f70ff          MOV      r0,#0xffff
00040e  f8ad0010          STRH     r0,[sp,#0x10]
;;;290        TIM_TimeBaseStructure.TIM_Prescaler = 0;           //?????:
000412  2000              MOVS     r0,#0
000414  f8ad000c          STRH     r0,[sp,#0xc]
;;;291        TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1 ;       //????????:???
000418  e014              B        |L1.1092|
00041a  0000              DCW      0x0000
                  |L1.1052|
                          DCD      0x40011800
                  |L1.1056|
                          DCD      0x40012c00
                  |L1.1060|
                          DCD      0x001600c0
                  |L1.1064|
                          DCD      0x40010800
                  |L1.1068|
                          DCD      0x40010c00
                  |L1.1072|
                          DCD      0x00300200
                  |L1.1076|
                          DCD      0x00180300
                  |L1.1080|
                          DCD      0x40000400
                  |L1.1084|
                          DCD      0x40011000
                  |L1.1088|
                          DCD      0x001a0c00
                  |L1.1092|
000444  f8ad0012          STRH     r0,[sp,#0x12]
;;;292        TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  //??????
000448  f8ad000e          STRH     r0,[sp,#0xe]
;;;293        //TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_CenterAligned1;
;;;294        /*???TIM3??? */
;;;295        TIM_TimeBaseInit(TIM3, &TIM_TimeBaseStructure);
00044c  a903              ADD      r1,sp,#0xc
00044e  48bd              LDR      r0,|L1.1860|
000450  f7fffffe          BL       TIM_TimeBaseInit
;;;296    
;;;297        /*-----------------------------------------------------------------*/
;;;298        //????                        ????
;;;299        TIM_EncoderInterfaceConfig(TIM3, TIM_EncoderMode_TI12, TIM_ICPolarity_Rising, TIM_ICPolarity_Rising); //TIM_ICPolarity_Rising?????
000454  2300              MOVS     r3,#0
000456  461a              MOV      r2,r3
000458  2103              MOVS     r1,#3
00045a  48ba              LDR      r0,|L1.1860|
00045c  f7fffffe          BL       TIM_EncoderInterfaceConfig
;;;300        TIM_ICStructInit(&TIM_ICInitStructure);
000460  4668              MOV      r0,sp
000462  f7fffffe          BL       TIM_ICStructInit
;;;301        TIM_ICInitStructure.TIM_ICFilter = 6;         //?????
000466  2006              MOVS     r0,#6
000468  f8ad0008          STRH     r0,[sp,#8]
;;;302        TIM_ICInit(TIM3, &TIM_ICInitStructure);
00046c  4669              MOV      r1,sp
00046e  48b5              LDR      r0,|L1.1860|
000470  f7fffffe          BL       TIM_ICInit
;;;303        //Reset counter
;;;304        TIM3->CNT = 0;
000474  2000              MOVS     r0,#0
000476  49b3              LDR      r1,|L1.1860|
000478  3124              ADDS     r1,r1,#0x24
00047a  8008              STRH     r0,[r1,#0]
;;;305        TIM_Cmd(TIM3, ENABLE);   //?????3
00047c  2101              MOVS     r1,#1
00047e  48b1              LDR      r0,|L1.1860|
000480  f7fffffe          BL       TIM_Cmd
;;;306    }
000484  b007              ADD      sp,sp,#0x1c
000486  bd00              POP      {pc}
;;;307    /**************************************************************************
                          ENDP

                  TIM4_EncoderMode_PB6_PB7_Config PROC
;;;312    **************************************************************************/
;;;313    void TIM4_EncoderMode_PB6_PB7_Config(void)
000488  b500              PUSH     {lr}
;;;314    {
00048a  b089              SUB      sp,sp,#0x24
;;;315        GPIO_InitTypeDef GPIO_InitStructure;
;;;316        TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
;;;317        TIM_ICInitTypeDef TIM_ICInitStructure;
;;;318        NVIC_InitTypeDef NVIC_InitStructure;
;;;319        /*----------------------------------------------------------------*/
;;;320        RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);
00048c  2101              MOVS     r1,#1
00048e  2008              MOVS     r0,#8
000490  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;321        GPIO_StructInit(&GPIO_InitStructure);
000494  a808              ADD      r0,sp,#0x20
000496  f7fffffe          BL       GPIO_StructInit
;;;322        /* Configure PB6,7 as encoder input */
;;;323        GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6 | GPIO_Pin_7;
00049a  20c0              MOVS     r0,#0xc0
00049c  f8ad0020          STRH     r0,[sp,#0x20]
;;;324        GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
0004a0  2004              MOVS     r0,#4
0004a2  f88d0023          STRB     r0,[sp,#0x23]
;;;325        GPIO_Init(GPIOB, &GPIO_InitStructure);
0004a6  a908              ADD      r1,sp,#0x20
0004a8  48a7              LDR      r0,|L1.1864|
0004aa  f7fffffe          BL       GPIO_Init
;;;326        /*----------------------------------------------------------------*/
;;;327        RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM4, ENABLE); //??TIM4
0004ae  2101              MOVS     r1,#1
0004b0  2004              MOVS     r0,#4
0004b2  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;328        TIM_DeInit(TIM4);  
0004b6  48a5              LDR      r0,|L1.1868|
0004b8  f7fffffe          BL       TIM_DeInit
;;;329    
;;;330    		NVIC_InitStructure.NVIC_IRQChannel = TIM4_IRQn;
0004bc  201e              MOVS     r0,#0x1e
0004be  f88d0004          STRB     r0,[sp,#4]
;;;331    		NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
0004c2  2000              MOVS     r0,#0
0004c4  f88d0005          STRB     r0,[sp,#5]
;;;332    		NVIC_InitStructure.NVIC_IRQChannelSubPriority = 1;
0004c8  2001              MOVS     r0,#1
0004ca  f88d0006          STRB     r0,[sp,#6]
;;;333    		NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
0004ce  f88d0007          STRB     r0,[sp,#7]
;;;334    		NVIC_Init(&NVIC_InitStructure);
0004d2  a801              ADD      r0,sp,#4
0004d4  f7fffffe          BL       NVIC_Init
;;;335    	
;;;336        TIM_TimeBaseStructure.TIM_Period = ENCODER_PERIOD;     
0004d8  f2427010          MOV      r0,#0x2710
0004dc  f8ad0018          STRH     r0,[sp,#0x18]
;;;337        TIM_TimeBaseStructure.TIM_Prescaler = ENCODER_PRES;        
0004e0  2000              MOVS     r0,#0
0004e2  f8ad0014          STRH     r0,[sp,#0x14]
;;;338        TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1 ;   
0004e6  f8ad001a          STRH     r0,[sp,#0x1a]
;;;339        TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
0004ea  f8ad0016          STRH     r0,[sp,#0x16]
;;;340        //TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_CenterAligned1;
;;;341        TIM_TimeBaseInit(TIM4, &TIM_TimeBaseStructure);
0004ee  a905              ADD      r1,sp,#0x14
0004f0  4896              LDR      r0,|L1.1868|
0004f2  f7fffffe          BL       TIM_TimeBaseInit
;;;342    
;;;343        /*-----------------------------------------------------------------*/
;;;344        TIM_EncoderInterfaceConfig(TIM4, TIM_EncoderMode_TI12, TIM_ICPolarity_Rising, TIM_ICPolarity_Rising); //TIM_ICPolarity_Rising?????
0004f6  2300              MOVS     r3,#0
0004f8  461a              MOV      r2,r3
0004fa  2103              MOVS     r1,#3
0004fc  4893              LDR      r0,|L1.1868|
0004fe  f7fffffe          BL       TIM_EncoderInterfaceConfig
;;;345    
;;;346        TIM_ICStructInit(&TIM_ICInitStructure);
000502  a802              ADD      r0,sp,#8
000504  f7fffffe          BL       TIM_ICStructInit
;;;347        TIM_ICInitStructure.TIM_ICFilter = 6;         
000508  2006              MOVS     r0,#6
00050a  f8ad0010          STRH     r0,[sp,#0x10]
;;;348        TIM_ICInit(TIM4, &TIM_ICInitStructure);
00050e  a902              ADD      r1,sp,#8
000510  488e              LDR      r0,|L1.1868|
000512  f7fffffe          BL       TIM_ICInit
;;;349        TIM_ClearFlag(TIM4, TIM_FLAG_Update);
000516  2101              MOVS     r1,#1
000518  488c              LDR      r0,|L1.1868|
00051a  f7fffffe          BL       TIM_ClearFlag
;;;350        TIM_ITConfig(TIM4, TIM_IT_Update, ENABLE);   
00051e  2201              MOVS     r2,#1
000520  4611              MOV      r1,r2
000522  488a              LDR      r0,|L1.1868|
000524  f7fffffe          BL       TIM_ITConfig
;;;351        //Reset counter
;;;352        TIM4->CNT = 0;
000528  2000              MOVS     r0,#0
00052a  4988              LDR      r1,|L1.1868|
00052c  3124              ADDS     r1,r1,#0x24
00052e  8008              STRH     r0,[r1,#0]
;;;353        TIM_Cmd(TIM4, ENABLE);   
000530  2101              MOVS     r1,#1
000532  4886              LDR      r0,|L1.1868|
000534  f7fffffe          BL       TIM_Cmd
;;;354    }
000538  b009              ADD      sp,sp,#0x24
00053a  bd00              POP      {pc}
;;;355    /**************************************************************************
                          ENDP

                  TIM4_EncoderMode_PD12_PD13_Config PROC
;;;361    /*********************************/
;;;362    void TIM4_EncoderMode_PD12_PD13_Config(void)
00053c  b500              PUSH     {lr}
;;;363    {
00053e  b089              SUB      sp,sp,#0x24
;;;364        GPIO_InitTypeDef GPIO_InitStructure;
;;;365        TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
;;;366        TIM_ICInitTypeDef TIM_ICInitStructure;
;;;367    		NVIC_InitTypeDef NVIC_InitStructure;
;;;368    	
;;;369        RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOD, ENABLE);
000540  2101              MOVS     r1,#1
000542  2020              MOVS     r0,#0x20
000544  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;370        GPIO_StructInit(&GPIO_InitStructure);
000548  a808              ADD      r0,sp,#0x20
00054a  f7fffffe          BL       GPIO_StructInit
;;;371        /* Configure PB6,7 as encoder input */
;;;372        GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12 | GPIO_Pin_13;
00054e  f44f5040          MOV      r0,#0x3000
000552  f8ad0020          STRH     r0,[sp,#0x20]
;;;373        GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
000556  2004              MOVS     r0,#4
000558  f88d0023          STRB     r0,[sp,#0x23]
;;;374        GPIO_Init(GPIOD, &GPIO_InitStructure);
00055c  a908              ADD      r1,sp,#0x20
00055e  487c              LDR      r0,|L1.1872|
000560  f7fffffe          BL       GPIO_Init
;;;375        /*----------------------------------------------------------------*/
;;;376        RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM4, ENABLE); 
000564  2101              MOVS     r1,#1
000566  2004              MOVS     r0,#4
000568  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;377        TIM_DeInit(TIM4);
00056c  4877              LDR      r0,|L1.1868|
00056e  f7fffffe          BL       TIM_DeInit
;;;378    	
;;;379    	  RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO, ENABLE);
000572  2101              MOVS     r1,#1
000574  4608              MOV      r0,r1
000576  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;380        GPIO_PinRemapConfig(GPIO_Remap_TIM4, ENABLE); 
00057a  2101              MOVS     r1,#1
00057c  0308              LSLS     r0,r1,#12
00057e  f7fffffe          BL       GPIO_PinRemapConfig
;;;381    	
;;;382    		NVIC_InitStructure.NVIC_IRQChannel = TIM4_IRQn;
000582  201e              MOVS     r0,#0x1e
000584  f88d0004          STRB     r0,[sp,#4]
;;;383    		NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;
000588  2001              MOVS     r0,#1
00058a  f88d0005          STRB     r0,[sp,#5]
;;;384    		NVIC_InitStructure.NVIC_IRQChannelSubPriority = 2;
00058e  2002              MOVS     r0,#2
000590  f88d0006          STRB     r0,[sp,#6]
;;;385    		NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
000594  2001              MOVS     r0,#1
000596  f88d0007          STRB     r0,[sp,#7]
;;;386    		NVIC_Init(&NVIC_InitStructure);
00059a  a801              ADD      r0,sp,#4
00059c  f7fffffe          BL       NVIC_Init
;;;387    	
;;;388        TIM_TimeBaseStructure.TIM_Period = ENCODER_PERIOD;     
0005a0  f2427010          MOV      r0,#0x2710
0005a4  f8ad0018          STRH     r0,[sp,#0x18]
;;;389        TIM_TimeBaseStructure.TIM_Prescaler = ENCODER_PRES;    //ENCODER_PERIOD  ENCODER_PRES
0005a8  2000              MOVS     r0,#0
0005aa  f8ad0014          STRH     r0,[sp,#0x14]
;;;390        TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1 ;     
0005ae  f8ad001a          STRH     r0,[sp,#0x1a]
;;;391        TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  
0005b2  f8ad0016          STRH     r0,[sp,#0x16]
;;;392      
;;;393        TIM_TimeBaseInit(TIM4, &TIM_TimeBaseStructure);
0005b6  a905              ADD      r1,sp,#0x14
0005b8  4864              LDR      r0,|L1.1868|
0005ba  f7fffffe          BL       TIM_TimeBaseInit
;;;394        TIM_EncoderInterfaceConfig(TIM4, TIM_EncoderMode_TI12, TIM_ICPolarity_Rising, TIM_ICPolarity_Rising); //TIM_ICPolarity_Rising?????
0005be  2300              MOVS     r3,#0
0005c0  461a              MOV      r2,r3
0005c2  2103              MOVS     r1,#3
0005c4  4861              LDR      r0,|L1.1868|
0005c6  f7fffffe          BL       TIM_EncoderInterfaceConfig
;;;395    
;;;396        TIM_ICStructInit(&TIM_ICInitStructure);
0005ca  a802              ADD      r0,sp,#8
0005cc  f7fffffe          BL       TIM_ICStructInit
;;;397        TIM_ICInitStructure.TIM_ICFilter = 6;        
0005d0  2006              MOVS     r0,#6
0005d2  f8ad0010          STRH     r0,[sp,#0x10]
;;;398        TIM_ICInit(TIM4, &TIM_ICInitStructure);
0005d6  a902              ADD      r1,sp,#8
0005d8  485c              LDR      r0,|L1.1868|
0005da  f7fffffe          BL       TIM_ICInit
;;;399        TIM_ClearFlag(TIM4, TIM_FLAG_Update);
0005de  2101              MOVS     r1,#1
0005e0  485a              LDR      r0,|L1.1868|
0005e2  f7fffffe          BL       TIM_ClearFlag
;;;400        TIM_ITConfig(TIM4, TIM_IT_Update, ENABLE);   
0005e6  2201              MOVS     r2,#1
0005e8  4611              MOV      r1,r2
0005ea  4858              LDR      r0,|L1.1868|
0005ec  f7fffffe          BL       TIM_ITConfig
;;;401    		
;;;402        //Reset counter
;;;403        TIM4->CNT = 0;
0005f0  2000              MOVS     r0,#0
0005f2  4956              LDR      r1,|L1.1868|
0005f4  3124              ADDS     r1,r1,#0x24
0005f6  8008              STRH     r0,[r1,#0]
;;;404        TIM_Cmd(TIM4, ENABLE);  
0005f8  2101              MOVS     r1,#1
0005fa  4854              LDR      r0,|L1.1868|
0005fc  f7fffffe          BL       TIM_Cmd
;;;405    }
000600  b009              ADD      sp,sp,#0x24
000602  bd00              POP      {pc}
;;;406    /*********************************/
                          ENDP

                  TIM5_EncoderMode_PA0_PA1_Config PROC
;;;412    **************************************************************************/
;;;413    void TIM5_EncoderMode_PA0_PA1_Config(void)
000604  b500              PUSH     {lr}
;;;414    {
000606  b087              SUB      sp,sp,#0x1c
;;;415        GPIO_InitTypeDef GPIO_InitStructure;
;;;416        TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
;;;417        TIM_ICInitTypeDef TIM_ICInitStructure;
;;;418        //TIM_OCInitTypeDef  TIM_OCInitStructure;
;;;419        /*----------------------------------------------------------------*/
;;;420        RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);
000608  2101              MOVS     r1,#1
00060a  2004              MOVS     r0,#4
00060c  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;421        GPIO_StructInit(&GPIO_InitStructure);
000610  a806              ADD      r0,sp,#0x18
000612  f7fffffe          BL       GPIO_StructInit
;;;422        /* Configure PA.0.1 as encoder input */
;;;423        GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0 | GPIO_Pin_1;
000616  2003              MOVS     r0,#3
000618  f8ad0018          STRH     r0,[sp,#0x18]
;;;424        GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
00061c  2004              MOVS     r0,#4
00061e  f88d001b          STRB     r0,[sp,#0x1b]
;;;425        GPIO_Init(GPIOA, &GPIO_InitStructure);
000622  a906              ADD      r1,sp,#0x18
000624  484b              LDR      r0,|L1.1876|
000626  f7fffffe          BL       GPIO_Init
;;;426        /*----------------------------------------------------------------*/
;;;427        RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM5, ENABLE); //??tim5
00062a  2101              MOVS     r1,#1
00062c  2008              MOVS     r0,#8
00062e  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;428        TIM_DeInit(TIM5);
000632  4849              LDR      r0,|L1.1880|
000634  f7fffffe          BL       TIM_DeInit
;;;429        //  TIM_TimeBaseInit(TIM5, &TIM_TimeBaseStructure);
;;;430    
;;;431        TIM_TimeBaseStructure.TIM_Period = 0xffff;      //
000638  f64f70ff          MOV      r0,#0xffff
00063c  f8ad0010          STRH     r0,[sp,#0x10]
;;;432        TIM_TimeBaseStructure.TIM_Prescaler = 0;           //?????:
000640  2000              MOVS     r0,#0
000642  f8ad000c          STRH     r0,[sp,#0xc]
;;;433        TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1 ;       //????????:???
000646  f8ad0012          STRH     r0,[sp,#0x12]
;;;434        TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  //??????
00064a  f8ad000e          STRH     r0,[sp,#0xe]
;;;435        //TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_CenterAligned1;
;;;436        /*???TIM5??? */
;;;437        TIM_TimeBaseInit(TIM5, &TIM_TimeBaseStructure);
00064e  a903              ADD      r1,sp,#0xc
000650  4841              LDR      r0,|L1.1880|
000652  f7fffffe          BL       TIM_TimeBaseInit
;;;438    
;;;439        /*-----------------------------------------------------------------*/
;;;440        //????                        ????
;;;441        TIM_EncoderInterfaceConfig(TIM5, TIM_EncoderMode_TI12, TIM_ICPolarity_Rising, TIM_ICPolarity_Rising); //TIM_ICPolarity_Rising?????
000656  2300              MOVS     r3,#0
000658  461a              MOV      r2,r3
00065a  2103              MOVS     r1,#3
00065c  483e              LDR      r0,|L1.1880|
00065e  f7fffffe          BL       TIM_EncoderInterfaceConfig
;;;442        TIM_ICStructInit(&TIM_ICInitStructure);
000662  4668              MOV      r0,sp
000664  f7fffffe          BL       TIM_ICStructInit
;;;443        TIM_ICInitStructure.TIM_ICFilter = 6;         //?????
000668  2006              MOVS     r0,#6
00066a  f8ad0008          STRH     r0,[sp,#8]
;;;444        TIM_ICInit(TIM5, &TIM_ICInitStructure);
00066e  4669              MOV      r1,sp
000670  4839              LDR      r0,|L1.1880|
000672  f7fffffe          BL       TIM_ICInit
;;;445        //Reset counter
;;;446        TIM5->CNT = 0;
000676  2000              MOVS     r0,#0
000678  4937              LDR      r1,|L1.1880|
00067a  3124              ADDS     r1,r1,#0x24
00067c  8008              STRH     r0,[r1,#0]
;;;447        TIM_Cmd(TIM5, ENABLE);   //?????3
00067e  2101              MOVS     r1,#1
000680  4835              LDR      r0,|L1.1880|
000682  f7fffffe          BL       TIM_Cmd
;;;448    }
000686  b007              ADD      sp,sp,#0x1c
000688  bd00              POP      {pc}
;;;449    /**************************************************************************
                          ENDP

                  TIM8_EncoderMode_PC6_PC7_Config PROC
;;;454    **************************************************************************/
;;;455    void TIM8_EncoderMode_PC6_PC7_Config(void)
00068a  b500              PUSH     {lr}
;;;456    {
00068c  b089              SUB      sp,sp,#0x24
;;;457        TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
;;;458        TIM_ICInitTypeDef  TIM_ICInitStructure;
;;;459        GPIO_InitTypeDef GPIO_InitStructure;
;;;460    		NVIC_InitTypeDef NVIC_InitStructure;
;;;461     
;;;462        RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC, ENABLE);
00068e  2101              MOVS     r1,#1
000690  2010              MOVS     r0,#0x10
000692  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;463        GPIO_StructInit(&GPIO_InitStructure);
000696  a802              ADD      r0,sp,#8
000698  f7fffffe          BL       GPIO_StructInit
;;;464        /* Configure PC.06,07 as encoder input */
;;;465        GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6 | GPIO_Pin_7;
00069c  20c0              MOVS     r0,#0xc0
00069e  f8ad0008          STRH     r0,[sp,#8]
;;;466        GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
0006a2  2004              MOVS     r0,#4
0006a4  f88d000b          STRB     r0,[sp,#0xb]
;;;467        GPIO_Init(GPIOC, &GPIO_InitStructure);
0006a8  a902              ADD      r1,sp,#8
0006aa  482c              LDR      r0,|L1.1884|
0006ac  f7fffffe          BL       GPIO_Init
;;;468    
;;;469        RCC_APB2PeriphClockCmd(RCC_APB2Periph_TIM8, ENABLE);
0006b0  2101              MOVS     r1,#1
0006b2  0348              LSLS     r0,r1,#13
0006b4  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;470        TIM_DeInit(TIM8);
0006b8  4829              LDR      r0,|L1.1888|
0006ba  f7fffffe          BL       TIM_DeInit
;;;471    
;;;472        TIM_TimeBaseStructure.TIM_Prescaler = ENCODER_PRES;  // No prescaling
0006be  2000              MOVS     r0,#0
0006c0  f8ad0018          STRH     r0,[sp,#0x18]
;;;473        TIM_TimeBaseStructure.TIM_Period = ENCODER_PERIOD;
0006c4  f2427010          MOV      r0,#0x2710
0006c8  f8ad001c          STRH     r0,[sp,#0x1c]
;;;474        TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1;
0006cc  2000              MOVS     r0,#0
0006ce  f8ad001e          STRH     r0,[sp,#0x1e]
;;;475        TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
0006d2  f8ad001a          STRH     r0,[sp,#0x1a]
;;;476        TIM_TimeBaseInit(TIM8, &TIM_TimeBaseStructure);
0006d6  a906              ADD      r1,sp,#0x18
0006d8  4821              LDR      r0,|L1.1888|
0006da  f7fffffe          BL       TIM_TimeBaseInit
;;;477    		
;;;478    		NVIC_InitStructure.NVIC_IRQChannel = TIM8_UP_IRQn;
0006de  202c              MOVS     r0,#0x2c
0006e0  f88d0004          STRB     r0,[sp,#4]
;;;479    		NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;
0006e4  2001              MOVS     r0,#1
0006e6  f88d0005          STRB     r0,[sp,#5]
;;;480    		NVIC_InitStructure.NVIC_IRQChannelSubPriority = 3;
0006ea  2003              MOVS     r0,#3
0006ec  f88d0006          STRB     r0,[sp,#6]
;;;481    		NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
0006f0  2001              MOVS     r0,#1
0006f2  f88d0007          STRB     r0,[sp,#7]
;;;482    		NVIC_Init(&NVIC_InitStructure);
0006f6  a801              ADD      r0,sp,#4
0006f8  f7fffffe          BL       NVIC_Init
;;;483    
;;;484        TIM_EncoderInterfaceConfig(TIM8, TIM_EncoderMode_TI12, TIM_ICPolarity_Rising, TIM_ICPolarity_Rising);
0006fc  2300              MOVS     r3,#0
0006fe  461a              MOV      r2,r3
000700  2103              MOVS     r1,#3
000702  4817              LDR      r0,|L1.1888|
000704  f7fffffe          BL       TIM_EncoderInterfaceConfig
;;;485        TIM_ICStructInit(&TIM_ICInitStructure);
000708  a803              ADD      r0,sp,#0xc
00070a  f7fffffe          BL       TIM_ICStructInit
;;;486        TIM_ICInitStructure.TIM_ICFilter = 6;
00070e  2006              MOVS     r0,#6
000710  f8ad0014          STRH     r0,[sp,#0x14]
;;;487        TIM_ICInit(TIM8, &TIM_ICInitStructure);
000714  a903              ADD      r1,sp,#0xc
000716  4812              LDR      r0,|L1.1888|
000718  f7fffffe          BL       TIM_ICInit
;;;488    		
;;;489        TIM_ClearFlag(TIM8, TIM_FLAG_Update);  //???????
00071c  2101              MOVS     r1,#1
00071e  4810              LDR      r0,|L1.1888|
000720  f7fffffe          BL       TIM_ClearFlag
;;;490        TIM_ITConfig(TIM8, TIM_IT_Update, ENABLE); //??????
000724  2201              MOVS     r2,#1
000726  4611              MOV      r1,r2
000728  480d              LDR      r0,|L1.1888|
00072a  f7fffffe          BL       TIM_ITConfig
;;;491    		
;;;492        TIM8->CNT = 0;
00072e  2000              MOVS     r0,#0
000730  490b              LDR      r1,|L1.1888|
000732  3124              ADDS     r1,r1,#0x24
000734  8008              STRH     r0,[r1,#0]
;;;493        TIM_Cmd(TIM8, ENABLE);
000736  2101              MOVS     r1,#1
000738  4809              LDR      r0,|L1.1888|
00073a  f7fffffe          BL       TIM_Cmd
;;;494    }
00073e  b009              ADD      sp,sp,#0x24
000740  bd00              POP      {pc}
                          ENDP

000742  0000              DCW      0x0000
                  |L1.1860|
                          DCD      0x40000400
                  |L1.1864|
                          DCD      0x40010c00
                  |L1.1868|
                          DCD      0x40000800
                  |L1.1872|
                          DCD      0x40011400
                  |L1.1876|
                          DCD      0x40010800
                  |L1.1880|
                          DCD      0x40000c00
                  |L1.1884|
                          DCD      0x40011000
                  |L1.1888|
                          DCD      0x40013400
